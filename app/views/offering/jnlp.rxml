if USE_LIBXML
  jnlp = XML::Parser.string(@jnlp.body).parse.root
else
  require "rexml/document"
  jnlp = REXML::Document.new(@jnlp.body).root
end

href_url = @controller.url_for(:controller => 'offering', :action => 'jnlp', :id => @offering.id, :wid => @workgroup.id, :version => @version, :only_path => false).to_s
homepage_url = @controller.url_for(:controller => 'offering', :action => 'show', :id => @offering.id, :only_path => false).to_s

url_params_hash = request.query_parameters             # this is a hack because I can't delete hash values from the
url_params_hash.delete('jnlp_filename')   # request.query_parameters hash (should be done in offering_controller)
extra_properties = hash_to_url_params(url_params_hash)
config_url =   @controller.url_for(:controller => "offering", :action => "config", :id => @offering.id, 
  :wid => @workgroup.id, :version => @workgroup.version, :savedata => @savedata, :only_path => false).to_s
if !extra_properties.blank?
  config_url = config_url + '?' + extra_properties.to_s
end

sds_launcher = "net.sf.sail.emf.launch.EMFLauncher2"

if USE_LIBXML
  app_desc = jnlp.find('./application-desc')
  app_desc_main_class = app_desc.first['main-class']
  app_desc_arg = app_desc.first.find('argument').first
  res_prop_value = jnlp.find('./resources/property/@value').first.value
else
  app_desc = jnlp.elements["application-desc"]
  app_desc_main_class = app_desc.attributes["main-class"]
  res_prop = jnlp.elements["resources/property"]
#  if res_prop  # some jnlps don't have properties defined
#    res_prop_value = res_prop.attributes["value"]
#  end
  app_desc_arg = jnlp.elements["application-desc/argument"]
end

# if there is a file-based launcher convert to an sds launcher
case "net.sf.sail.emf.launch.EMFLauncher3"
when app_desc_main_class
  if USE_LIBXML
    app_desc.first['main-class'] = sds_launcher
  else
    app_desc.attributes["main-class"] = app_desc_main_class = sds_launcher
  end
# when res_prop_value
#   if USE_LIBXML
#   else
#     res_prop.attributes["value"] = res_prop_value = sds_launcher
#   end
end

# if there is an sds_launcher set the application-desc/argument to the config_url
if USE_LIBXML
  case sds_launcher
  when app_desc.first['main-class']
    app_desc_arg.content = config_url
  end
else
# I haven't figured out why this code isn't working
  case sds_launcher
  when app_desc_main_class, res_prop_value
    app_desc_arg.text = config_url
  end
end

resources = ''
if USE_LIBXML
  res = jnlp.find('resources').first
  if @jnlp_properties
    @jnlp_properties.each do |name, value|
      res << pr = XML::Node.new('property')
      pr['name'] = name 
      pr['value'] = value
    end
  end
  resources = jnlp.find('//resources') 
else
  jnlp.elements.each("//resources") { |e| resources << e } 
end

xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
if USE_LIBXML
  xml.jnlp("spec" => jnlp['spec'], "codebase" => jnlp['codebase']) { render_jnlp_body(xml, jnlp, resources) }
else
  xml.jnlp("spec" => jnlp.attributes['spec'], "codebase" => jnlp.attributes['codebase']) { render_jnlp_body(xml, jnlp, resources) }
end


