xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
xml.java("version" => "1.4.0", "class" => "java.beans.XMLDecoder") {
  xml.object("class" => "net.sf.sail.core.service.impl.CurnitUrlProviderImpl") {
    xml.void("property" => "url") {
      xml.string(@offering.curnit.url)
    }
  }
  xml.object("class" => "net.sf.sail.emf.launch.PortfolioManagerService") {
    xml.void("property" => "portfolioUrlProvider") {
      xml.object("class" => "net.sf.sail.emf.launch.XmlUrlStringProviderImpl") {
        xml.void("property" => "urlString") {
          xml.string(@controller.url_for(
                                  :controller => "offering", 
                                  :action => "bundle", 
                                  :id => @offering.id, 
                                  :wid => @workgroup.id,
                                  :version => @version,
                                  :only_path => false))
        }
      }
    }
    xml.void("property" => "sessionPoster") {
      xml.object("class" => "net.sf.sail.emf.launch.SessionPoster") {
        xml.void("property" => "postUrl") {
          xml.string(@controller.url_for(
                                  :controller => "offering", 
                                  :action => "bundle", 
                                  :id => @offering.id, 
                                  :wid => @workgroup.id,
                                  :version => @version,
                                  :only_path => false))
        }
      }
    }
  }
  xml.object("class" => "net.sf.sail.core.service.impl.LauncherServiceImpl")
  xml.object("class" => "net.sf.sail.emf.launch.EMFSailDataStoreService2")
  xml.object("class" => "net.sf.sail.core.service.impl.UserServiceImpl") {
    xml.void("property" => "participants") {
      @users = @workgroup.users.version(@version)
      @users.each do |u|
        add_user_to_config(xml, u)
      end          
    }
    xml.void("property" => "userLookupService") {
      xml.object("class" => "net.sf.sail.core.service.impl.UserLookupServiceImpl")
    }
  } 
  xml.object("class" => "net.sf.sail.core.service.impl.SessionLoadMonitor")  
  xml.object("class" => "net.sf.sail.core.service.impl.SessionManagerImpl")
}
