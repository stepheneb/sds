xml.instruct! :xml, :version=>"1.0", :encoding=>"UTF-8"
# xml.userOfferingConfig {
#   xml.sailSessionConfig {
    xml.java("version" => "1.4.0", "class" => "java.beans.XMLDecoder") {
      xml.object("class" => "net.sf.sail.core.service.impl.CurnitUrlProviderImpl") {
        xml.void("property" => "url") {
          xml.string(@offering.curnit.url)
        }
      }
      xml.object("class" => "net.sf.sail.emf.launch.PortfolioManagerService") {
        xml.void("property" => "portfolioUrlProvider") {
          xml.object("class" => "net.sf.sail.emf.launch.XmlUrlStringProviderImpl") {
            xml.void("property" => "urlString") {
              xml.string(@controller.url_for(
                                      :controller => "offering", 
                                      :action => "bundle", 
                                      :oid => @offering.id, 
                                      :uid => @user.id,
                                      :only_path => false))
            }
          }
        }
        xml.void("property" => "bundlePoster") {
          xml.object("class" => "net.sf.sail.emf.launch.BundlePoster") {
            xml.void("property" => "postUrl") {
              xml.string(@controller.url_for(
                                      :controller => "offering", 
                                      :action => "bundle", 
                                      :oid => @offering.id, 
                                      :uid => @user.id,
                                      :only_path => false))
            }
          }
        }
      }
      xml.object("class" => "net.sf.sail.core.service.impl.LauncherServiceImpl")
      xml.object("class" => "net.sf.sail.emf.launch.EMFSailDataStoreService2")
      xml.object("class" => "net.sf.sail.core.service.impl.UserServiceImpl") {
        xml.void("property" => "participants") {
          xml.void("method" => "add") {
             xml.object("class" => "net.sf.sail.core.entity.User") {
               xml.object("class" => "net.sf.sail.core.uuid.UserUuid") {
                 xml.string(@user.sail_uuid)
               }
               xml.string(@user.name)
             }
           }
        }
        xml.void("property" => "userLookupService") {
          xml.object("class" => "net.sf.sail.core.service.impl.UserLookupServiceImpl")
        }
      } 
      xml.object("class" => "net.sf.sail.core.service.impl.SessionLoadMonitor")  
      xml.object("class" => "net.sf.sail.core.service.impl.SessionManagerImpl")
    }
#   }
# }
